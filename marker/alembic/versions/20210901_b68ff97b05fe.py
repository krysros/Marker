"""init

Revision ID: b68ff97b05fe
Revises: 
Create Date: 2021-09-01 19:20:50.645350

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "b68ff97b05fe"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "persons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fullname", sa.Unicode(length=50), nullable=True),
        sa.Column("position", sa.Unicode(length=50), nullable=True),
        sa.Column("phone", sa.Unicode(length=50), nullable=True),
        sa.Column("email", sa.Unicode(length=50), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_persons")),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.Unicode(length=30), nullable=True),
        sa.Column("fullname", sa.Unicode(length=50), nullable=True),
        sa.Column("email", sa.Unicode(length=50), nullable=True),
        sa.Column("role", sa.Unicode(length=20), nullable=True),
        sa.Column("password", sa.Unicode(length=255), nullable=True),
        sa.Column("added", sa.DateTime(), nullable=True),
        sa.Column("edited", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    op.create_table(
        "branches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(length=50), nullable=True),
        sa.Column("added", sa.DateTime(), nullable=True),
        sa.Column("edited", sa.DateTime(), nullable=True),
        sa.Column("submitter_id", sa.Integer(), nullable=True),
        sa.Column("editor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["editor_id"],
            ["users.id"],
            name=op.f("fk_branches_editor_id_users"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["submitter_id"],
            ["users.id"],
            name=op.f("fk_branches_submitter_id_users"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_branches")),
    )
    op.create_table(
        "comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("added", sa.DateTime(), nullable=True),
        sa.Column("submitter_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["submitter_id"],
            ["users.id"],
            name=op.f("fk_comments_submitter_id_users"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_comments")),
    )
    op.create_table(
        "companies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(length=100), nullable=True),
        sa.Column("street", sa.Unicode(length=100), nullable=True),
        sa.Column("postcode", sa.Unicode(length=10), nullable=True),
        sa.Column("city", sa.Unicode(length=100), nullable=True),
        sa.Column("voivodeship", sa.Unicode(length=2), nullable=True),
        sa.Column("phone", sa.Unicode(length=50), nullable=True),
        sa.Column("email", sa.Unicode(length=100), nullable=True),
        sa.Column("www", sa.Unicode(length=100), nullable=True),
        sa.Column("nip", sa.Unicode(length=20), nullable=True),
        sa.Column("regon", sa.Unicode(length=20), nullable=True),
        sa.Column("krs", sa.Unicode(length=20), nullable=True),
        sa.Column("court", sa.Unicode(length=100), nullable=True),
        sa.Column("category", sa.Unicode(length=10), nullable=True),
        sa.Column("added", sa.DateTime(), nullable=True),
        sa.Column("edited", sa.DateTime(), nullable=True),
        sa.Column("submitter_id", sa.Integer(), nullable=True),
        sa.Column("editor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["editor_id"],
            ["users.id"],
            name=op.f("fk_companies_editor_id_users"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["submitter_id"],
            ["users.id"],
            name=op.f("fk_companies_submitter_id_users"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_companies")),
    )
    op.create_table(
        "documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.Unicode(length=200), nullable=True),
        sa.Column("typ", sa.Unicode(length=50), nullable=True),
        sa.Column("added", sa.DateTime(), nullable=True),
        sa.Column("edited", sa.DateTime(), nullable=True),
        sa.Column("submitter_id", sa.Integer(), nullable=True),
        sa.Column("editor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["editor_id"],
            ["users.id"],
            name=op.f("fk_documents_editor_id_users"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["submitter_id"],
            ["users.id"],
            name=op.f("fk_documents_submitter_id_users"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_documents")),
    )
    op.create_table(
        "investments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Unicode(length=200), nullable=True),
        sa.Column("city", sa.Unicode(length=100), nullable=True),
        sa.Column("voivodeship", sa.Unicode(length=2), nullable=True),
        sa.Column("link", sa.Unicode(length=2000), nullable=True),
        sa.Column("deadline", sa.Date(), nullable=True),
        sa.Column("added", sa.DateTime(), nullable=True),
        sa.Column("edited", sa.DateTime(), nullable=True),
        sa.Column("submitter_id", sa.Integer(), nullable=True),
        sa.Column("editor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["editor_id"],
            ["users.id"],
            name=op.f("fk_investments_editor_id_users"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["submitter_id"],
            ["users.id"],
            name=op.f("fk_investments_submitter_id_users"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_investments")),
    )
    op.create_table(
        "companies_branches",
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("branch_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"],
            ["branches.id"],
            name=op.f("fk_companies_branches_branch_id_branches"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
            name=op.f("fk_companies_branches_company_id_companies"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    op.create_table(
        "companies_comments",
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("comment_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["comments.id"],
            name=op.f("fk_companies_comments_comment_id_comments"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
            name=op.f("fk_companies_comments_company_id_companies"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    op.create_table(
        "companies_investments",
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("investment_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
            name=op.f("fk_companies_investments_company_id_companies"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["investment_id"],
            ["investments.id"],
            name=op.f("fk_companies_investments_investment_id_investments"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    op.create_table(
        "companies_persons",
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("person_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
            name=op.f("fk_companies_persons_company_id_companies"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["persons.id"],
            name=op.f("fk_companies_persons_person_id_persons"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    op.create_table(
        "following",
        sa.Column("investment_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["investment_id"],
            ["investments.id"],
            name=op.f("fk_following_investment_id_investments"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_following_user_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    op.create_table(
        "marker",
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
            name=op.f("fk_marker_company_id_companies"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_marker_user_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    op.create_table(
        "upvotes",
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
            name=op.f("fk_upvotes_company_id_companies"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_upvotes_user_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("upvotes")
    op.drop_table("marker")
    op.drop_table("following")
    op.drop_table("companies_persons")
    op.drop_table("companies_investments")
    op.drop_table("companies_comments")
    op.drop_table("companies_branches")
    op.drop_table("investments")
    op.drop_table("documents")
    op.drop_table("companies")
    op.drop_table("comments")
    op.drop_table("branches")
    op.drop_table("users")
    op.drop_table("persons")
    # ### end Alembic commands ###
